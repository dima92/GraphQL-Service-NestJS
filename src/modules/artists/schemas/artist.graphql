type Artist {
  id: ID!
  firstName: String!
  secondName: String!
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [Band]
  instruments: [String]
}

type Artists {
  items: [Artist]
  limit: Int
  offset: Int
  total: Int
}

input NewArtistInput {
  firstName: String!
  secondName: String!
  country: String
  instruments: [String]
  bandsIds: [ID]
}

input ArtistInput {
  firstName: String
  secondName: String
  country: String
  instruments: [String]
  bandsIds: [ID]
}

type Query {
  artists(limit: Int, offset: Int): Artists
  artist(id: ID!): Artist
}

extend type Mutation {
  createArtist(newArtist: NewArtistInput): Artist
  updateArtist(id: ID!, artist: ArtistInput): Artist
  deleteArtist(id: ID!): DEL
}
