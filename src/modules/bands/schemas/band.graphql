type Band {
  id: ID!
  name: String
  origin: String
  members: [Member]
  website: String
  genres: [Genre]
}

type Member {
  artistId: ID!
  instrument: String
  years: [Int]
}

input MemberInput {
  artistId: ID!
  instrument: String
  years: [Int]
}

input NewBandInput {
  name: String!
  origin: String
  website: String
  genresIds: [ID]
  members: [MemberInput]
}

input BandInput {
  name: String
  origin: String
  website: String
  genresIds: [ID]
  members: [MemberInput]
}

type Bands {
  items: [Band]
  limit: Int
  offset: Int
  total: Int
}

extend type Query {
  bands(limit: Int, offset: Int): Bands
  band(id: ID!): Band
}

extend type Mutation {
  createBand(band: NewBandInput): Band
  deleteBand(id: ID!): DEL
  updateBand(id: ID!, band: BandInput): Band
}
